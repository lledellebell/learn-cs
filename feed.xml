<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS 학습 노트</title>
    <link>https://github.com/lledellebell/learn-cs</link>
    <description>컴퓨터 과학 개념과 기술을 학습하고 기록하는 공간</description>
    <language>ko</language>
    <lastBuildDate>Tue, 14 Oct 2025 09:34:41 +0000</lastBuildDate>
    <atom:link href="https://lledellebell.github.io/learn-cs/feed.xml" rel="self" type="application/rss+xml"/>
    <image>
      <url>https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExcDFtbXJsZXJtMGdkZXZpbmVoNnRtdGNnNjJvZHVxdGVvZnRqcTNvZCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/f3iwJFOVOwuy7K6FFw/giphy.gif</url>
      <title>CS 학습 노트</title>
      <link>https://github.com/lledellebell/learn-cs</link>
    </image>

    <item>
      <title>&quot;HackerNews 오늘의 IT 뉴스&quot;</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/tech-news/2025-10-14-hackernews-top-stories.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/tech-news/2025-10-14-hackernews-top-stories.md</guid>
      <pubDate>Tue, 14 Oct 2025 09:00:00 +0000</pubDate>
      <category>기타</category>
      <description>**2025년 10월 14일 화요일** 기준 HackerNews Top 10 이야기</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>&quot;HackerNews 오늘의 IT 뉴스&quot;</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/tech-news/latest.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/tech-news/latest.md</guid>
      <pubDate>Tue, 14 Oct 2025 09:00:00 +0000</pubDate>
      <category>기타</category>
      <description>**2025년 10월 14일 화요일** 기준 HackerNews Top 10 이야기</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>&quot;HackerNews 오늘의 IT 뉴스&quot;</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/tech-news/2025-10-13-hackernews-top-stories.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/tech-news/2025-10-13-hackernews-top-stories.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>기타</category>
      <description>SQL Online AiDE는 웹 기반 SQL 데이터베이스 편집 및 쿼리 도구입니다. SQLite, MariaDB, PostgreSQL 등 다양한 데이터베이스를 지원하며, 차트 생...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Jekyll 로컬 개발 가이드</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/JEKYLL_SETUP.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/JEKYLL_SETUP.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>기타</category>
      <description>이 레포지토리는 GitHub Pages를 사용하여 Jekyll로 빌드됩니다.</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>알고리즘</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/algorithms/index.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/algorithms/index.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>알고리즘</category>
      <description>알고리즘에 대한 학습 노트</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>메모이제이션(Memoization)</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/algorithms/memoization-optimization-technique.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/algorithms/memoization-optimization-technique.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>알고리즘</category>
      <description>여러분은 fibonacci(40)을 계산하다가 브라우저가 먹통이 된 경험이 있나요?</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>저작권 및 이용 정책</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/copyright.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/copyright.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>기타</category>
      <description>최종 업데이트: {{ site.time | date: &quot;%Y년 %m월 %d일&quot; }}</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>데이터베이스</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/databases/index.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/databases/index.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>데이터베이스</category>
      <description>데이터베이스에 대한 학습 노트</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Prisma ORM 가이드</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/databases/prisma-orm-guide.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/databases/prisma-orm-guide.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>데이터베이스</category>
      <description>혹시 이런 경험 있으신가요? 데이터베이스에서 사용자 정보를 가져오는 간단한 코드를 작성했는데, 런타임에 `email`이 아니라 `e-mail`이라는 오타 때문에 서버가 터진다든지....</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Learn CS</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/index.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/index.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>기타</category>
      <description>Learn CS에 대한 학습 노트</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>프로그래밍 언어</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/index.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/index.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>프로그래밍 언어에 대한 학습 노트</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Callback - JavaScript 비동기의 시작점</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/callback.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/callback.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>이런 코드를 본 적이 있나요?</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Factory Pattern - 객체를 만드는 똑똑한 방법</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/factory_pattern.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/factory_pattern.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>프로젝트가 커지면서 이런 경험을 해본 적 있나요?</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>JavaScript의 Mutation vs Non-Mutation 심화</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/mutation-vs-non-mutation-examples.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/mutation-vs-non-mutation-examples.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>&gt; 이 문서는 [Mutation vs Non-Mutation 개념](./mutation-vs-non-mutation.md)의 실무 활용 예시를 다룹니다.</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>JavaScript 네이밍 컨벤션: Public vs Private</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/naming-conventions.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/naming-conventions.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>JavaScript/TypeScript에서 클래스의 메서드나 프로퍼티 이름을 짓는 방식은 **접근 권한**(public/private)에 따라 달라집니다.</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Prototype - JavaScript의 숨은 마법을 이해하기</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/prototype.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/prototype.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>JavaScript를 배우면서 이런 코드를 본 적이 있나요?</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Prototype Chain - JavaScript 상속의 마법 같은 여정</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/prototype_chain.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/prototype_chain.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>[prototype.md](./prototype.md)를 읽고 오셨나요? 그렇다면 이미 Prototype이 무엇이고, 왜 중요한지 알고 계실 겁니다. 하지만 **Prototype ...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>this 키워드 - JavaScript에서 가장 혼란스러운 개념을 정복하기</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/this.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/this.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>이 코드를 보세요:</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>HTTP 인증 방법 완벽 가이드</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/networking/http/http_authentication_methods.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/networking/http/http_authentication_methods.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>네트워킹</category>
      <description>처음 API를 만들고 나면 곧바로 이런 질문에 부딪히게 됩니다. &quot;누가 이 API를 호출할 수 있게 할까? 어떻게 사용자를 확인하지?&quot; 저도 첫 프로젝트에서 이 문제를 마주했을 때...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>네트워킹</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/networking/index.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/networking/index.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>네트워킹</category>
      <description>네트워킹에 대한 학습 노트</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>CSS Mask Composite</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/css/mask-composite.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/css/mask-composite.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>웹사이트를 둘러보다가 이런 멋진 효과를 본 적 있나요? 텍스트 안에 비디오가 재생되거나, 이미지가 복잡한 도형으로 잘려 나가거나, 여러 이미지가 마치 포토샵에서 레이어 블렌딩을 한...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>CSS 성능 최적화 - 렌더링 차단에서 비동기 로딩까지</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/css/preload-css-async-loading.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/css/preload-css-async-loading.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>웹 성능 최적화에서 CSS 로딩 전략은 사용자가 체감하는 로딩 속도에 직접적인 영향을 미칩니다. 이 가이드는 문제 진단부터 해결책 구현까지의 실무적 접근 방법을 단계별로 다룹니다.</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Custom Hooks 가이드 (React 공식 문서 기반)</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/hooks/custom-hooks-deep-dive.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/hooks/custom-hooks-deep-dive.md</guid>
      <pubDate>Fri, 10 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>&gt; React 공식 문서를 기반으로 작성된 Custom Hooks 가이드</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>`useMemo`를 활용한 성능 최적화</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/optimization/react-usememo-optimization.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/optimization/react-usememo-optimization.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>상상해보세요. 여러분이 만든 React 앱의 검색 페이지에서 사용자가 검색어를 입력할 때마다 화면이 버벅입니다. 단 1글자를 입력할 때마다 수백 개의 아이템을 필터링하고 정렬하는 ...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Header 컴포넌트에서 Compound/Composite 패턴을 사용하지 않는 이유</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/pattern.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/pattern.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>React로 컴포넌트를 설계하다 보면 이런 고민을 하게 됩니다. &quot;Card 컴포넌트는 Compound 패턴을 사용해서 유연하게 만들었는데, Header도 똑같이 만들어야 하나?&quot; ...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Composite Pattern</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/composite-pattern.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/composite-pattern.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>**Composite Pattern**은 객체들을 트리 구조로 구성하여 부분-전체 계층을 표현하는 구조적 디자인 패턴입니다.</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Compound Pattern</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/compound-pattern.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/compound-pattern.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>Select와 Option 컴포넌트를 본 적 있나요? 아니면 HTML의 `&lt;table&gt;`, `&lt;tr&gt;`, `&lt;td&gt;`처럼 함께 사용해야 의미가 있는 요소들을 떠올려보세요. Reac...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Configuration over Composition Pattern</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/configuration-over-composition.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/configuration-over-composition.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>Header 컴포넌트를 만들 때 이런 고민을 해본 적 있나요?</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>React 하이드레이션과 CSS 재적용 문제</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/hydration-and-css-issues.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/hydration-and-css-issues.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>이런 에러 메시지를 본 적 있나요?</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>`React`에서 `Composite`/`Compound` Pattern 활용 가이드</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/react-composite-compound-patterns.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/react-composite-compound-patterns.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>&gt; **어원적 차이**: Compound(복합어)는 두 개 이상의 완전한 단어를 결합하여 새로운 하나의 단어를 만드는 것(예: &quot;sailboat&quot;)이고, Composite(합성어)...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Context API를 활용한 Compound Pattern 구현</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/react-context-api-compound-pattern.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/react-context-api-compound-pattern.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>&gt; React의 Context API와 Compound Pattern을 결합하면 강력하고 유연한 컴포넌트 시스템을 만들 수 있습니다.</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>React Provider Pattern</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/react-provider-pattern.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/patterns/react-provider-pattern.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>React 애플리케이션을 개발하다 보면 이런 상황을 자주 마주하게 됩니다:</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Custom Hook 리팩토링: useAsync</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/refactor/custom-hook-refactoring-useAsync.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/react/refactor/custom-hook-refactoring-useAsync.md</guid>
      <pubDate>Fri, 10 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>API 데이터 페칭 로직은 대부분의 React 애플리케이션에서 반복적으로 사용됩니다. 하지만 매번 비슷한 패턴의 코드를 작성하면 다음과 같은 문제가 발생합니다.</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>JSON Feed 사양</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/guides/json-feed-specification.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/guides/json-feed-specification.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>JSON Feed는 RSS/Atom과 같은 콘텐츠 신디케이션(syndication) 포맷으로, XML 대신 JSON을 사용합니다. 2017년에 발표된 오픈 사양으로, JSON 표준...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>나만의 npm 라이브러리 만들고 세상과 공유하기</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/guides/npm-library-guide.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/guides/npm-library-guide.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>프로젝트를 진행하다 보면 이런 경험을 해본 적 있나요? &quot;아, 이 유틸리티 함수 저번 프로젝트에서도 썼는데... 복사해야 하나?&quot; 저도 처음에는 코드를 복사-붙여넣기하면서 &quot;나중에...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>웹 개발</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/index.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/index.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>웹 개발에 대한 학습 노트</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>HTML 새니타이징(Sanitization) - XSS 공격 방어</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/security/html-sanitization.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/security/html-sanitization.md</guid>
      <pubDate>Mon, 13 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>상상해보세요. 여러분이 만든 블로그에 누군가 댓글을 남겼습니다. &quot;좋은 글이네요!&quot;라는 평범한 댓글처럼 보이지만, 실제로는 이런 코드가 숨어있었습니다:</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>`bind()` 메소드 - this가 사라지는 문제를 해결하는 마법</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/bind.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/bind.md</guid>
      <pubDate>Fri, 10 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>React로 클래스 컴포넌트를 처음 만들 때 이런 경험을 한 적이 있나요?</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>`forEach` vs `reduce`</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/foreach-vs-reduce-functional-programming.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/foreach-vs-reduce-functional-programming.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>함수형 프로그래밍 관점에서의 배열 메서드 선택</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>인스턴스 (Instance)</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/instance.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/instance.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>혹시 이런 코드를 본 적 있나요?</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>JavaScript에서 Mutation vs Non-Mutation</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/mutation-vs-non-mutation.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/javascript/mutation-vs-non-mutation.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>저도 처음 React를 배울 때 이런 경험을 했습니다. 분명히 배열에 새 항목을 추가했는데, 화면에는 아무것도 나타나지 않았습니다.</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>ReturnType - 함수의 반환 타입을 자동으로 추출하는 마법</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/typescript/get_return_type.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/typescript/get_return_type.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>상상해보세요. 동료가 만든 복잡한 API 함수가 있습니다. 이 함수의 반환값을 다른 곳에서 사용해야 하는데, 반환 타입을 정확히 알 수가 없습니다. 함수 구현을 열어서 return...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>메타프로그래밍(Metaprogramming)</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/languages/typescript/metaprogramming-concept.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/languages/typescript/metaprogramming-concept.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>프로그래밍 언어</category>
      <description>여러분은 TypeScript로 코드를 작성하다가 이런 경험을 해본 적 있나요? &quot;어, 이 타입 정의... 80줄이나 되는데 패턴이 반복되네?&quot; 저도 처음에는 모든 타입을 손으로 하...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>웹폰트 최적화 완전 가이드: 다운로드부터 배포까지</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/css/font-optimization-preload-fout.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/css/font-optimization-preload-fout.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>웹폰트는 브랜딩과 사용자 경험의 핵심 요소이지만, 잘못 구현하면 성능 문제와 접근성 이슈를 야기합니다.</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>반응형 디자인의 필수 도구, object-fit과 object-position 완벽 가이드</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/css/object-position_&amp;_object-fit.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/frontend/css/object-position_&amp;_object-fit.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>프로필 이미지를 업로드했는데 얼굴이 잘리거나, 상품 사진이 찌그러져서 나오거나, 히어로 섹션의 배경 이미지가 이상하게 늘어난 경험 있나요? 저도 처음 웹 개발을 배울 때 이미지가 ...</description>
      <author>lledellebell</author>
    </item>

    <item>
      <title>Chrome User Agent Override 가이드</title>
      <link>https://github.com/lledellebell/learn-cs/blob/master/web-development/tools/chrome-user-agent-override.md</link>
      <guid isPermaLink="true">https://github.com/lledellebell/learn-cs/blob/master/web-development/tools/chrome-user-agent-override.md</guid>
      <pubDate>Thu, 02 Oct 2025 09:00:00 +0000</pubDate>
      <category>웹 개발</category>
      <description>&quot;모바일에서만 레이아웃이 깨진다는데, 제 iPhone에서는 멀쩡하게 보이는데요?&quot;</description>
      <author>lledellebell</author>
    </item>
  </channel>
</rss>